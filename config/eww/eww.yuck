(defwindow bar
  :monitor 0
  :hexpand false
  :vexpand false
  :geometry (geometry :anchor "top center" :x 0 :y 0 :width "100%" :height "2%")
	:exclusive true
  (bar :screen 0))

(defwidget bar [screen]
  (box :orientation "h"
       :space-evenly false
       :class "bar"
    (box :halign "start"
         :space-evenly false
			(widget_workspaces))
    (box :halign "end"
         :spacing 12
         :hexpand true
         :space-evenly false
      (date)
      (time))))

(defpoll time_poll :interval "1s" "date +%H:%M:%S")
(defpoll date_poll :interval "1m" "date +%d/%m/%Y")

; Generic icon module foldstart
(defwidget icon-module [icon ?class ?visible]
  (box :class "${class} icon-module"
       :orientation "h"
       :halign "end"
       :space-evenly false
       :visible {visible ?: true} ; because the argument is optional
    (label :class "icon-module__icon" :text "${icon}")
    (children)))

(defwidget date []
  (icon-module :class "date" :icon "" 
    (label :text date_poll)))

(defwidget time []
  (icon-module :class "time" :icon "" 
    (label :text time_poll))) 

(deflisten workspaces :initial "[]" "/home/sylkos/dotfiles/config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "/home/sylkos/dotfiles/config/eww/scripts/get-active-workspace")
(defwidget widget_workspaces []
  (eventbox :onscroll "/home/sylkos/dotfiles/config/eww/scripts/change-active-workspace {} ${current_workspace}" :class "workspaces-widget"
    (box :space-evenly true
      (label :text "${workspaces}${current_workspace}" :visible false)
      (for workspace in workspaces
        (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
          (box :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
            (label :text "${workspace.id}")
            )
          )
        )
      )
    )
  )
