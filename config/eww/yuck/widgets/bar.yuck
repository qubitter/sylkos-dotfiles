; Workspace widget for hyprland
(defwidget bar_workspaces [orientation]
	(eventbox :onscroll "scripts/change-active-workspace {} ${current_workspace}"
						:class "w-workspaces-outer"
						(box 
							:class "w-workspaces-inner"
							:space-evenly true
							:orientation orientation
							(label :text "${workspaces}${current_workspace}" :visible false)
							(for workspace in workspaces
								(eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
									(box :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
										(label :text "${workspace.id == current_workspace ? "" : "${workspace.windows > 0 ? "" : ""}"}")))))))

; Launcher widget nixos
(defwidget bar_launcher [] (box :class "w-launcher"
    (button
        :class "button launcher"
				:onclick "wofi --show drun"
				:timeout "10s"
        (label :class "icon" :text "󱄅" :halign "center")
    )
))

(defwidget bar_date []
  (icon-module :class "date" :icon ""
    (label :text date_poll)))

(defwidget bar_time []
  (icon-module :class "time" :icon ""
    (label :text time_poll)))

(defwidget bar_battery []
	(icon-module :class "battery" :icon ""
		(label :text battery)))

(defwidget bar_powermenu [] (box :class "w-powermenu" 
	(button
    :class "button powermenu"
    :onclick "hyprctl dispatch exit 1"
    (label :class "icon" :text "")
)))

(defwidget bar_clock [orientation] (box :class "w-time"
    (button
        :class "button clock"
        (box
            :space-evenly false
            :orientation orientation
            (label :text hour :class "clock")
            (bar_separator :orientation orientation :dots "[1, 2]" :visible true)
            (label :text minutes :class "minutes")
            (bar_separator :orientation orientation :dots "[1, 2]" :visible true)
            (label :text seconds :class "seconds")
        )
    )
))

(defwidget bar_separator [orientation dots visible] (box
    :orientation orientation
    :class "separator"
    :space-evenly false
    :visible visible
    (for dot in dots
        (box :class "dot" :halign "center" :hexpand true :valign "center"))))

(defwidget bar_battery [orientation] (box :class "w-battery"
	(button
		:class "button battery"
		(box
			:space-evenly false
			:orientation orientation
			(overlay
				(label :text ""))
				(label :class "battery-testing-thingy" :text battery)
		))))
